[tool.poetry]
name = 'cir-duplicate-detector'
version = '0.1.3'
description = "PDQ hash and URL duplicate detector. Developed by Sam Sweere from BigData Repulic as part of their Social Good Initiaive."
authors = ['Sam Sweere <samsweere@gmail.com>']
readme = 'README.md'
repository = 'https://github.com/Centre-for-Information-Resilience/cir-duplicate-detector'
license = 'BSD-3-Clause'
packages = [{include = "cir_duplicate_detector"}]

[tool.poetry.dependencies]
python = '>=3.10,<3.12'
pandas = '>=1.3'
pdqhash = "^0.2.5"
rapidfuzz = "^3"
tqdm = "^4"
pybktree = "^1.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^4.1.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.2"
pre-commit = "^3.6.2"
mypy = "^1.9.0"

[build-system]
requires = ['poetry-core']
build-backend = 'poetry.core.masonry.api'


[tool.ruff]
# Ruff is flake8 + isort + other tools implemented in Rust
include = ['*.py', '*.ipynb', 'pyproject.toml']

# The fix value enables or disables auto fixing
fix = false

line-length = 120

target-version = 'py311'

[tool.ruff.lint]
ignore = [
    'D100', # Missing docstring in public module
    'D104' , # Missing docstring in public package
    'PD901', # `df` is a bad variable name. Be kinder to your future self.
    ]

select = [
    'E',    # pycodestyle
    'W',    # pycodestyle
    'F',    # pyflakes
    'I',    # isort
    'B',    # flake8-bugbear
    'C4',   # flake8-comprehensions
    'UP',   # pyupgrade
    'PD',   # pandas-vet
    'SIM',  # flake8-simplify
    # 'D',    # pydocstyle
]

[tool.ruff.lint.per-file-ignores]
'notebooks/*' = [

    'E501', # Line too long, most of the time not a problem in a notebook
    'B018', # Found useless expression. Either assign it to a variable or remove it. Often used in notebooks for debugging
    'E402', # Module level import not at top of file, this is usually not the case in a notebook
]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.mypy]
python_version = '3.11'
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
disable_error_code = [
    'attr-defined'
]
exclude = [
    '^tests/.*'
]
