name: Automatic Versioning and Publishing

# This workflow is triggered when a pull request is opened and the target branch is main
# It checks if the version in the merge request is higher than the version in the main branch
# If it is, it keeps the version in the merge request
# If it is the same or lower, it performs a patch version bump before publishing

# We are not committing the version bump to the main branch, since the github action does not have the
# rights to push to the main branch. This is a security feature of github actions.
# This is because, anyone could then create a pull request that changes the main
# branch by using github actions.

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

jobs:
  version-bump-and-publish:
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Get version from main branch
        run: |
          echo "CURRENT_VERSION=$(poetry version --short)" >> $GITHUB_ENV
        shell: bash

      - name: Get the latest version from pip
        run: |
          echo "PIPY_VERSION=$(pip index versions cir-duplicate-detector 2>&1 | grep -v 'WARNING' | awk '/LATEST:/ {print $NF}')" >> $GITHUB_ENV
        shell: bash

      - name: Compare versions and take action
        run: |
          if [ "$CURRENT_VERSION" <= "$PIPY_VERSION" ]; then
            echo "Version is the same or smaller. Performing a patch version bump."
            poetry version patch
            echo "VERSION_BUMPED=true" >> $GITHUB_ENV
          elif [ "$CURRENT_VERSION" > "$PIPY_VERSION" ]; then
            echo "Merge request has a higher version. Keeping it."
          fi
          echo "Going to publish with version $(poetry version --short)"
        shell: bash

      # Github actions does not have the rights to push to the main branch
      # - name: Configure Git
      #   if: env.VERSION_BUMPED == 'true'
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@github.com"
      #     git add pyproject.toml
      #     git commit -m "Patch version bump"
      #     git push

      - name: Build and publish package
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry build
          poetry publish --username __token__ --password $POETRY_PYPI_TOKEN_PYPI
